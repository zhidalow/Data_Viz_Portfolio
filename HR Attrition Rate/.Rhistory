ifelse(i == 2, collated <- var_combined, collated <- rbind(collated,var_combined))
}
View(collated)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(readr)
library(dplyr)
library(stringr)
library(ggpubr)
#set up df: split into 2 distinct df for categorical dv and continuous dv
raw_df <- read_csv("WA_Fn-UseC_-HR-Employee-Attrition.csv",show_col_types = FALSE)
cont_df <- raw_df %>% select (c("Attrition",
"Age",
"DistanceFromHome",
"MonthlyIncome",
"NumCompaniesWorked",
"PercentSalaryHike",
"TotalWorkingYears",
"TrainingTimesLastYear",
"YearsAtCompany",
"YearsInCurrentRole",
"YearsSinceLastPromotion",
"TrainingTimesLastYear",
"YearsWithCurrManager"))
cat_df <- raw_df %>% select (c("Attrition",
"BusinessTravel",
"Department",
"EnvironmentSatisfaction",
"Gender",
"JobSatisfaction",
"MaritalStatus",
"OverTime",
"PerformanceRating",
"RelationshipSatisfaction",
"StockOptionLevel",
"WorkLifeBalance"))
#convert all data types to character type first for later analysis
nums<- sapply(cat_df, is.numeric)
cat_df[ , nums] <- as.data.frame(apply(cat_df[ , nums], 2, as.character))
#calculate mean for Attrition "Yes" vs Attrition "No"
mean_cm <- cont_df  %>% group_by(Attrition) %>% summarize(across(everything(), list(mean=mean)))
#calculate percentage difference of mean of Attrition = "Yes" CM value from Attrition = "No"
pct_chg_mean_cm <- mean_cm[,-1]
pct_chg_mean_cm <- (pct_chg_mean_cm[2,]-pct_chg_mean_cm[1,])/pct_chg_mean_cm[1,]*100
pct_chg_mean_cm_stk <- data.frame(stack(pct_chg_mean_cm))
names(pct_chg_mean_cm_stk) <- c('pct_diff_frm_no_attrition','cont_dpt_variable')
#order by greatest percentage difference from Attrition = "No"
pct_chg_mean_cm_stk <- pct_chg_mean_cm_stk %>% arrange(desc(abs(pct_diff_frm_no_attrition)))
pct_chg_mean_cm_reorder <- pct_chg_mean_cm_stk[,c(2,1)]
#display final tbl
pct_chg_mean_cm_reorder
#plot boxplot and add caption for t-test type and -value for the CMs
#setup df for t-test
dat <- select(cont_df,c("YearsInCurrentRole","YearsWithCurrManager","TotalWorkingYears","Attrition"))
# Edit from here #
x <- which(names(dat) == "Attrition") # name of grouping variable
y <- which(names(dat) == "YearsInCurrentRole" # names of variables to test
| names(dat) == "YearsWithCurrManager" |
names(dat) == "TotalWorkingYears")
method <- "t.test" # one of "wilcox.test" or "t.test"
paired <- FALSE # if paired make sure that in the dataframe you have first all individuals at T1, then all individuals again at T2
# Edit until here
# Edit at your own risk
for (i in y) {
for (j in x) {
ifelse(paired == TRUE,
p <- ggpaired(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]), line.color = "gray", line.size = 0.4,
palette = "npg",
legend = "none",
xlab = colnames(dat[j]),
ylab = colnames(dat[i]),
add = "jitter"
),
p <- ggboxplot(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]),
palette = "npg",
legend = "none",
add = "jitter"
)
)
#  Add p-value
print(p + stat_compare_means(aes(label = paste0(..method.., ", p-value = ", ..p.format..)),
method = method,
paired = paired,
# group.by = NULL,
ref.group = NULL
))
}
}
#summary tbl with adj p-values using Bonferroni correction
pval_df <- sapply(dat[,-4],function (m) t.test(m ~ dat$Attrition,
paired = FALSE,
alternative = "two.sided"
)$p.value)
pval_df_formatted <- data.frame(
Variable = names(dat[, 1:3]),
raw_pvalue = unname(pval_df)
)
pval_df_formatted$Bonferroni <-
p.adjust(pval_df_formatted$raw_pvalue,
method = "bonferroni"
)
pval_df_formatted
for (i in 2:ncol(cat_df)) {
## count no of observations in each subgroup
obs <- cat_df[,c(1,i)]
obs <- obs %>% group_by(Attrition,obs[2]) %>% summarise(count=n()) %>% as.data.frame()
obs <- obs %>% mutate(obs_or_exp = "obs", Variable = names(obs[2]))
obs <- obs[,c(1,4,5,2,3)]
## calculate number of expected observations for each subgroup
expt <- table(cat_df[,c(1,i)])
chisq <- chisq.test(expt)
expt <- as.data.frame(chisq$expected)
expt <- expt %>% mutate(Attrition = c("No","Yes"), obs_or_exp = "expt", Variable = names(obs[4]))
expt <- data.frame(expt[4:6],stack(expt[1:3]))
expt[,c(4:5)] = expt[,c(5:4)]
##rename columns for both df for consistency and union
names(expt)[c(4:5)] <- c("var_group","cnt")
names(obs)[c(4:5)] <- c("var_group","cnt")
var_combined <- rbind(obs,expt)
## bind to final df "collated" used for visualization
ifelse(i == 2, collated <- var_combined, collated <- rbind(collated,var_combined))
}
View(collated)
View(var_combined)
View(collated)
View(cat_df)
View(obs)
View(expt)
View(expt)
View(chisq)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(readr)
library(dplyr)
library(stringr)
library(ggpubr)
#set up df: split into 2 distinct df for categorical dv and continuous dv
raw_df <- read_csv("WA_Fn-UseC_-HR-Employee-Attrition.csv",show_col_types = FALSE)
cont_df <- raw_df %>% select (c("Attrition",
"Age",
"DistanceFromHome",
"MonthlyIncome",
"NumCompaniesWorked",
"PercentSalaryHike",
"TotalWorkingYears",
"TrainingTimesLastYear",
"YearsAtCompany",
"YearsInCurrentRole",
"YearsSinceLastPromotion",
"TrainingTimesLastYear",
"YearsWithCurrManager"))
cat_df <- raw_df %>% select (c("Attrition",
"BusinessTravel",
"Department",
"EnvironmentSatisfaction",
"Gender",
"JobSatisfaction",
"MaritalStatus",
"OverTime",
"PerformanceRating",
"RelationshipSatisfaction",
"StockOptionLevel",
"WorkLifeBalance"))
#convert all data types to character type first for later analysis
nums<- sapply(cat_df, is.numeric)
cat_df[ , nums] <- as.data.frame(apply(cat_df[ , nums], 2, as.character))
#calculate mean for Attrition "Yes" vs Attrition "No"
mean_cm <- cont_df  %>% group_by(Attrition) %>% summarize(across(everything(), list(mean=mean)))
#calculate percentage difference of mean of Attrition = "Yes" CM value from Attrition = "No"
pct_chg_mean_cm <- mean_cm[,-1]
pct_chg_mean_cm <- (pct_chg_mean_cm[2,]-pct_chg_mean_cm[1,])/pct_chg_mean_cm[1,]*100
pct_chg_mean_cm_stk <- data.frame(stack(pct_chg_mean_cm))
names(pct_chg_mean_cm_stk) <- c('pct_diff_frm_no_attrition','cont_dpt_variable')
#order by greatest percentage difference from Attrition = "No"
pct_chg_mean_cm_stk <- pct_chg_mean_cm_stk %>% arrange(desc(abs(pct_diff_frm_no_attrition)))
pct_chg_mean_cm_reorder <- pct_chg_mean_cm_stk[,c(2,1)]
#display final tbl
pct_chg_mean_cm_reorder
#plot boxplot and add caption for t-test type and -value for the CMs
#setup df for t-test
dat <- select(cont_df,c("YearsInCurrentRole","YearsWithCurrManager","TotalWorkingYears","Attrition"))
# Edit from here #
x <- which(names(dat) == "Attrition") # name of grouping variable
y <- which(names(dat) == "YearsInCurrentRole" # names of variables to test
| names(dat) == "YearsWithCurrManager" |
names(dat) == "TotalWorkingYears")
method <- "t.test" # one of "wilcox.test" or "t.test"
paired <- FALSE # if paired make sure that in the dataframe you have first all individuals at T1, then all individuals again at T2
# Edit until here
# Edit at your own risk
for (i in y) {
for (j in x) {
ifelse(paired == TRUE,
p <- ggpaired(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]), line.color = "gray", line.size = 0.4,
palette = "npg",
legend = "none",
xlab = colnames(dat[j]),
ylab = colnames(dat[i]),
add = "jitter"
),
p <- ggboxplot(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]),
palette = "npg",
legend = "none",
add = "jitter"
)
)
#  Add p-value
print(p + stat_compare_means(aes(label = paste0(..method.., ", p-value = ", ..p.format..)),
method = method,
paired = paired,
# group.by = NULL,
ref.group = NULL
))
}
}
#summary tbl with adj p-values using Bonferroni correction
pval_df <- sapply(dat[,-4],function (m) t.test(m ~ dat$Attrition,
paired = FALSE,
alternative = "two.sided"
)$p.value)
pval_df_formatted <- data.frame(
Variable = names(dat[, 1:3]),
raw_pvalue = unname(pval_df)
)
pval_df_formatted$Bonferroni <-
p.adjust(pval_df_formatted$raw_pvalue,
method = "bonferroni"
)
pval_df_formatted
obs <- cat_df[,c(1,4)]
obs <- obs %>% group_by(Attrition,obs[2]) %>% summarise(count=n()) %>% as.data.frame()
View(obs)
obs <- obs %>% mutate(obs_or_exp = "obs", Variable = names(obs[2]))
View(obs)
obs <- obs[,c(1,4,5,2,3)]
View(obs)
expt <- table(cat_df[,c(1,4)])
chisq <- chisq.test(expt)
expt <- as.data.frame(chisq$expected)
View(expt)
chisq$observed
expt <- expt %>% mutate(Attrition = c("No","Yes"), obs_or_exp = "expt", Variable = names(obs[4]))
View(expt)
expt <- data.frame(expt[ncol(expt)-2:ncol(expt)],stack(expt[1:ncol(expt)-3]))
expt <- data.frame(expt[(ncol(expt)-2):ncol(expt)],stack(expt[1:(ncol(expt)-3)]))
View(expt)
expt[,c(4:5)] = expt[,c(5:4)]
View(obs)
names(expt)[c(4:5)] <- c("var_group","cnt")
names(obs)[c(4:5)] <- c("var_group","cnt")
var_combined <- rbind(obs,expt)
View(chisq)
chisq$expected
chisq$observed
ifelse(i == 2, collated <- var_combined, collated <- rbind(collated,var_combined))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(readr)
library(dplyr)
library(stringr)
library(ggpubr)
#set up df: split into 2 distinct df for categorical dv and continuous dv
raw_df <- read_csv("WA_Fn-UseC_-HR-Employee-Attrition.csv",show_col_types = FALSE)
cont_df <- raw_df %>% select (c("Attrition",
"Age",
"DistanceFromHome",
"MonthlyIncome",
"NumCompaniesWorked",
"PercentSalaryHike",
"TotalWorkingYears",
"TrainingTimesLastYear",
"YearsAtCompany",
"YearsInCurrentRole",
"YearsSinceLastPromotion",
"TrainingTimesLastYear",
"YearsWithCurrManager"))
cat_df <- raw_df %>% select (c("Attrition",
"BusinessTravel",
"Department",
"EnvironmentSatisfaction",
"Gender",
"JobSatisfaction",
"MaritalStatus",
"OverTime",
"PerformanceRating",
"RelationshipSatisfaction",
"StockOptionLevel",
"WorkLifeBalance"))
#convert all data types to character type first for later analysis
nums<- sapply(cat_df, is.numeric)
cat_df[ , nums] <- as.data.frame(apply(cat_df[ , nums], 2, as.character))
#calculate mean for Attrition "Yes" vs Attrition "No"
mean_cm <- cont_df  %>% group_by(Attrition) %>% summarize(across(everything(), list(mean=mean)))
#calculate percentage difference of mean of Attrition = "Yes" CM value from Attrition = "No"
pct_chg_mean_cm <- mean_cm[,-1]
pct_chg_mean_cm <- (pct_chg_mean_cm[2,]-pct_chg_mean_cm[1,])/pct_chg_mean_cm[1,]*100
pct_chg_mean_cm_stk <- data.frame(stack(pct_chg_mean_cm))
names(pct_chg_mean_cm_stk) <- c('pct_diff_frm_no_attrition','cont_dpt_variable')
#order by greatest percentage difference from Attrition = "No"
pct_chg_mean_cm_stk <- pct_chg_mean_cm_stk %>% arrange(desc(abs(pct_diff_frm_no_attrition)))
pct_chg_mean_cm_reorder <- pct_chg_mean_cm_stk[,c(2,1)]
#display final tbl
pct_chg_mean_cm_reorder
#plot boxplot and add caption for t-test type and -value for the CMs
#setup df for t-test
dat <- select(cont_df,c("YearsInCurrentRole","YearsWithCurrManager","TotalWorkingYears","Attrition"))
# Edit from here #
x <- which(names(dat) == "Attrition") # name of grouping variable
y <- which(names(dat) == "YearsInCurrentRole" # names of variables to test
| names(dat) == "YearsWithCurrManager" |
names(dat) == "TotalWorkingYears")
method <- "t.test" # one of "wilcox.test" or "t.test"
paired <- FALSE # if paired make sure that in the dataframe you have first all individuals at T1, then all individuals again at T2
# Edit until here
# Edit at your own risk
for (i in y) {
for (j in x) {
ifelse(paired == TRUE,
p <- ggpaired(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]), line.color = "gray", line.size = 0.4,
palette = "npg",
legend = "none",
xlab = colnames(dat[j]),
ylab = colnames(dat[i]),
add = "jitter"
),
p <- ggboxplot(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]),
palette = "npg",
legend = "none",
add = "jitter"
)
)
#  Add p-value
print(p + stat_compare_means(aes(label = paste0(..method.., ", p-value = ", ..p.format..)),
method = method,
paired = paired,
# group.by = NULL,
ref.group = NULL
))
}
}
#summary tbl with adj p-values using Bonferroni correction
pval_df <- sapply(dat[,-4],function (m) t.test(m ~ dat$Attrition,
paired = FALSE,
alternative = "two.sided"
)$p.value)
pval_df_formatted <- data.frame(
Variable = names(dat[, 1:3]),
raw_pvalue = unname(pval_df)
)
pval_df_formatted$Bonferroni <-
p.adjust(pval_df_formatted$raw_pvalue,
method = "bonferroni"
)
pval_df_formatted
for (i in 2:ncol(cat_df)) {
## count no of observations in each subgroup
obs <- cat_df[,c(1,i)]
obs <- obs %>% group_by(Attrition,obs[2]) %>% summarise(count=n()) %>% as.data.frame()
obs <- obs %>% mutate(obs_or_exp = "obs", Variable = names(obs[2]))
obs <- obs[,c(1,4,5,2,3)]
## calculate number of expected observations for each subgroup
expt <- table(cat_df[,c(1,i)])
chisq <- chisq.test(expt)
expt <- as.data.frame(chisq$expected)
expt <- expt %>% mutate(Attrition = c("No","Yes"), obs_or_exp = "expt", Variable = names(obs[4]))
expt <- data.frame(expt[(ncol(expt)-2):ncol(expt)],stack(expt[1:(ncol(expt)-3)]))
expt[,c(4:5)] = expt[,c(5:4)]
##rename columns for both df for consistency and union
names(expt)[c(4:5)] <- c("var_group","cnt")
names(obs)[c(4:5)] <- c("var_group","cnt")
var_combined <- rbind(obs,expt)
## bind to final df "collated" used for visualization
ifelse(i == 2, collated <- var_combined, collated <- rbind(collated,var_combined))
}
View(collated)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(readr)
library(dplyr)
library(stringr)
library(ggpubr)
#set up df: split into 2 distinct df for categorical dv and continuous dv
raw_df <- read_csv("WA_Fn-UseC_-HR-Employee-Attrition.csv",show_col_types = FALSE)
cont_df <- raw_df %>% select (c("Attrition",
"Age",
"DistanceFromHome",
"MonthlyIncome",
"NumCompaniesWorked",
"PercentSalaryHike",
"TotalWorkingYears",
"TrainingTimesLastYear",
"YearsAtCompany",
"YearsInCurrentRole",
"YearsSinceLastPromotion",
"TrainingTimesLastYear",
"YearsWithCurrManager"))
cat_df <- raw_df %>% select (c("Attrition",
"BusinessTravel",
"Department",
"EnvironmentSatisfaction",
"Gender",
"JobSatisfaction",
"MaritalStatus",
"OverTime",
"PerformanceRating",
"RelationshipSatisfaction",
"StockOptionLevel",
"WorkLifeBalance"))
#convert all data types to character type first for later analysis
nums<- sapply(cat_df, is.numeric)
cat_df[ , nums] <- as.data.frame(apply(cat_df[ , nums], 2, as.character))
#calculate mean for Attrition "Yes" vs Attrition "No"
mean_cm <- cont_df  %>% group_by(Attrition) %>% summarize(across(everything(), list(mean=mean)))
#calculate percentage difference of mean of Attrition = "Yes" CM value from Attrition = "No"
pct_chg_mean_cm <- mean_cm[,-1]
pct_chg_mean_cm <- (pct_chg_mean_cm[2,]-pct_chg_mean_cm[1,])/pct_chg_mean_cm[1,]*100
pct_chg_mean_cm_stk <- data.frame(stack(pct_chg_mean_cm))
names(pct_chg_mean_cm_stk) <- c('pct_diff_frm_no_attrition','cont_dpt_variable')
#order by greatest percentage difference from Attrition = "No"
pct_chg_mean_cm_stk <- pct_chg_mean_cm_stk %>% arrange(desc(abs(pct_diff_frm_no_attrition)))
pct_chg_mean_cm_reorder <- pct_chg_mean_cm_stk[,c(2,1)]
#display final tbl
pct_chg_mean_cm_reorder
#plot boxplot and add caption for t-test type and -value for the CMs
#setup df for t-test
dat <- select(cont_df,c("YearsInCurrentRole","YearsWithCurrManager","TotalWorkingYears","Attrition"))
# Edit from here #
x <- which(names(dat) == "Attrition") # name of grouping variable
y <- which(names(dat) == "YearsInCurrentRole" # names of variables to test
| names(dat) == "YearsWithCurrManager" |
names(dat) == "TotalWorkingYears")
method <- "t.test" # one of "wilcox.test" or "t.test"
paired <- FALSE # if paired make sure that in the dataframe you have first all individuals at T1, then all individuals again at T2
# Edit until here
# Edit at your own risk
for (i in y) {
for (j in x) {
ifelse(paired == TRUE,
p <- ggpaired(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]), line.color = "gray", line.size = 0.4,
palette = "npg",
legend = "none",
xlab = colnames(dat[j]),
ylab = colnames(dat[i]),
add = "jitter"
),
p <- ggboxplot(dat,
x = colnames(dat[j]), y = colnames(dat[i]),
color = colnames(dat[j]),
palette = "npg",
legend = "none",
add = "jitter"
)
)
#  Add p-value
print(p + stat_compare_means(aes(label = paste0(..method.., ", p-value = ", ..p.format..)),
method = method,
paired = paired,
# group.by = NULL,
ref.group = NULL
))
}
}
#summary tbl with adj p-values using Bonferroni correction
pval_df <- sapply(dat[,-4],function (m) t.test(m ~ dat$Attrition,
paired = FALSE,
alternative = "two.sided"
)$p.value)
pval_df_formatted <- data.frame(
Variable = names(dat[, 1:3]),
raw_pvalue = unname(pval_df)
)
pval_df_formatted$Bonferroni <-
p.adjust(pval_df_formatted$raw_pvalue,
method = "bonferroni"
)
pval_df_formatted
for (i in 2:ncol(cat_df)) {
## count no of observations in each subgroup
obs <- cat_df[,c(1,i)]
obs <- obs %>% group_by(Attrition,obs[2]) %>% summarise(count=n()) %>% as.data.frame()
obs <- obs %>% mutate(obs_or_exp = "obs", Variable = names(obs[2]))
obs <- obs[,c(1,4,5,2,3)]
## calculate number of expected observations for each subgroup
expt <- table(cat_df[,c(1,i)])
chisq <- chisq.test(expt)
expt <- as.data.frame(chisq$expected)
expt <- expt %>% mutate(Attrition = c("No","Yes"), obs_or_exp = "expt", Variable = names(obs[4]))
expt <- data.frame(expt[(ncol(expt)-2):ncol(expt)],stack(expt[1:(ncol(expt)-3)]));
expt[,c(4:5)] = expt[,c(5:4)]
##rename columns for both df for consistency and union
names(expt)[c(4:5)] <- c("var_group","cnt")
names(obs)[c(4:5)] <- c("var_group","cnt")
var_combined <- rbind(obs,expt)
## bind to final df "collated" used for visualization
ifelse(i == 2, collated <- var_combined, collated <- rbind(collated,var_combined))
}
setwd("C:/Users/lowzh/Desktop/Portfolio/HR Attrition Rate")
setwd("C:/Users/lowzh/Desktop/Portfolio/Completed/HR Attrition Rate")
